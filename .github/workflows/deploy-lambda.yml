name: Upload artifact to S3 bucket

on:
  workflow_call:
    inputs:
      lambda_name:
        description: The name of the Lambda function.
        required: true
        type: string
      runtime:
        description: The runtime of the Lambda function.
        required: true
        type: string
      handler:
        description: The handler of the Lambda function.
        required: true
        type: string
      template:
        description: 'Filename with path of the template'
        required: false
        type: string
        default: .aws/templates/lambda.yml
      s3_bucket_name:
        description: The name of the S3 bucket to upload the file to.
        required: true
        type: string
      env_name:
        description: 'Name of the environment'
        required: false
        type: string
        default: 'prod'
      template_repo:
        description: 'Name of the common template repository for cloud formation files'
        required: false
        type: string
        default: 'cosq-network/common-aws-infrastructure'
      template_repo_ref:
        description: 'Name of the common template repository for cloud formation files'
        required: false
        type: string
        default: 'master'
      variables:
        description: 'Value to set to environmen variables of the Lambda'
        required: false
        type: string
        default: ''
      security_group_ids:
        description: 'List of security group ids as comma separated string'
        required: true
        type: string
      subnet_ids:
        description: 'List of subnet ids as comma separated string'
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      LAMBDA_ROLE_ARN:
        description: The ARN of the Lambda role.
        required: true

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.template_repo }}
          ref: ${{ inputs.template_repo_ref }}
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.lambda_name }}-${{ inputs.env_name }}
          path: ${{ github.workspace }}/downloads

      - name: Initialize AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3 bucket
        run: aws s3 cp ${{ github.workspace }}/downloads/${{ inputs.lambda_name }}-${{ inputs.env_name }}.zip s3://${{ inputs.s3_bucket_name }}/${{ github.repository }}/${{ inputs.env_name }}/${{github.sha}}/${{ inputs.lambda_name }}-${{ inputs.env_name }}.zip

      - name: Deploy Lambda
        uses: cosq-network/aws-cloudformation-deploy@v1.2.0
        with:
          stackName: ${{ inputs.lambda_name }}-${{ inputs.env_name }}
          templateFile: ${{ inputs.template }}
          parameterJSON: |
            {
              "S3Bucket": "${{ inputs.s3_bucket_name }}",
              "S3Key": "${{ github.repository }}/${{ inputs.env_name }}/${{github.sha}}/${{ inputs.lambda_name }}-${{ inputs.env_name }}.zip",
              "FunctionName": "${{ inputs.lambda_name }}",
              "Runtime": "${{ inputs.runtime }}",
              "Handler": "${{ inputs.handler }}",
              "LambdaExecutionRoleArn": "${{ secrets.LAMBDA_ROLE_ARN }}",
              "SecurityGroupIds": "${{ inputs.security_group_ids }}",
              "SubnetIds": "${{ inputs.subnet_ids }}
            }

      - name: Configure lambda environmenr variables
        if: ${{ inputs.variables }}
        run: |
          aws lambda update-function-configuration \
          --function-name ${{ inputs.lambda_name }} \
          --environment "Variables={${{ inputs.variables }}}"
