name: Upload artifact to S3 bucket

on:
  workflow_call:
    inputs:
      lambda_name:
        description: The name of the Lambda function.
        required: true
        type: string
      runtime:
        description: The runtime of the Lambda function.
        required: true
        type: string
      handler:
        description: The handler of the Lambda function.
        required: true
        type: string
      template:
        description: 'Filename with path of the template'
        required: false
        type: string
        default: .aws/templates/lambda.yml
      stack_name:
        description: 'Name of the stack'
        required: false
        type: string
      artifact_name:
        description: The name of the artifact to download.
        required: true
        type: string
      zip_file_name:
        description: 'Name for the zip file'
        required: true
        type: string
      s3_bucket_name:
        description: The name of the S3 bucket to upload the file to.
        required: true
        type: string
      s3_prefix_key:
        description: The S3 prefix key to upload the file to.
        required: false
        type: string
      env_name:
        description: 'Name of the environment'
        required: false
        type: string
        default: 'prod'
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      SECURITY_GROUP_ID:
        description: The ID of the security group.
        required: true
      LAMBDA_ROLE_ARN:
        description: The ARN of the Lambda role.
        required: true

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ github.workspace }}/downloads

      - name: Initialize AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3 bucket
        run: aws s3 cp ${{ github.workspace }}/downloads/${{ inputs.zip_file_name }} s3://${{ inputs.s3_bucket_name }}/${{ inputs.s3_prefix_key }}/${{ inputs.zip_file_name }}

      - name: Deploy Lambda
        uses: cosq-network/aws-cloudformation-deploy@v1.2.0
        with:
          stackName: ${{ inputs.stack_name }}
          templateFile: ${{ inputs.template }}
          parameterJSON: |
            {
              "S3Bucket": "${{ inputs.s3_bucket_name }}",
              "S3Key": "${{ inputs.s3_prefix_key }}/${{ inputs.zip_file_name }}",
              "FunctionName": "${{ inputs.lambda_name }}",
              "Runtime": "${{ inputs.runtime }}",
              "Handler": "${{ inputs.handler }}",
              "SecurityGroupId": "${{ secrets.SECURITY_GROUP_ID }}",
              "LambdaExecutionRoleArn": "${{ secrets.LAMBDA_ROLE_ARN }}"
            }


